*SUBROUTINE TRIN.MISC.WAIVE(OI.KEY, STATUS, ERR, OPTIONS)
***************************************************************************
* Program: TRIN.MISC.WAIVE
* Author : Ian McGowan
* Date   : 2015-07-09
* Checkin: $*Id: $
* Comment: Given an OI key associated with a misc, waive that open item
***************************************************************************
* $*Log: $
* TODO:
*  1) need to look at taxes! - DONE
*  2) do not waive financed misc items (contract needs rebalancing) - how to tell? - DONE
*  3) test with some open items with multiple charges - DONE
*  4) does the amount in AS.OPEN.ITEM get prorated?
*  5) where does the INC.IN.RENT flag come from? - DONE

$INCLUDE IL.BPI ASSET.OPEN.ITEM.DIM
$INCLUDE IL.BPI PAYMENT.HISTORY.DIM
$INCLUDE IL.BPI ADDL.PAYMENT.HISTORY.DIM
$INCLUDE IL.BPI MASTER.DIM
$INCLUDE IL.BPI BILLING.DIM
$INCLUDE IL.BPI OI.POINTERS.DIM
$INCLUDE IL.BPI CONTRACT.POINTERS.DIM
$INCLUDE IL.BPI PAYMENT.KEYS.DIM
$INCLUDE IL.BPI MISC.DIM
$INCLUDE IL.BPI ADDL.MISC.DIM
$INCLUDE IL.BPI OI.CTD.INVOICE.DIM
$INCLUDE IL.BPI MONTH.COUNTS.DIM
$INCLUDE IL.BPI CHGLOG.DIM

STATUS=0
ERR=''

OPEN 'AS.MASTER'                      TO AS.MASTER         ELSE ERR='OPEN AS.MASTER' ; GOTO ERR.SUB
OPEN 'AS.OPEN.ITEM'                   TO AS.OPEN.ITEM      ELSE ERR='OPEN AS.OPEN.ITEM' ; GOTO ERR.SUB
OPEN 'LS.CTD.PYMTHIST'                TO LS.CTD.PYMTHIST   ELSE ERR='OPEN LS.CTD.PYMTHIST' ; GOTO ERR.SUB
OPEN 'LS.MASTER'                      TO LS.MASTER         ELSE ERR='OPEN LS.MASTER' ; GOTO ERR.SUB
OPEN 'LS.MASTER,LS.BILLING'           TO LS.BILLING        ELSE ERR='OPEN LS.MASTER,LS.BILLING' ; GOTO ERR.SUB
OPEN 'LS.MASTER,LS.OI.POINTERS'       TO LS.OI.POINTERS    ELSE ERR='OPEN LS.MASTER,LS.OI.POINTERS' ; GOTO ERR.SUB
OPEN 'LS.MASTER,LS.POINTERS'          TO LS.POINTERS       ELSE ERR='OPEN LS.MASTER,LS.POINTERS' ; GOTO ERR.SUB
OPEN 'LS.MASTER,LS.PYMTHIST'          TO LS.PYMTHIST       ELSE ERR='OPEN LS.MASTER,LS.PYMTHIST' ; GOTO ERR.SUB
OPEN 'LS.MISC.HIST'                   TO LS.MISC.HIST      ELSE ERR='OPEN LS.MISC.HIST' ; GOTO ERR.SUB
OPEN 'LS.MISC.HIST,LS.ADDL.MISC.HIST' TO LS.ADDL.MISC.HIST ELSE ERR='OPEN LS.MISC.HIST,LS.ADDL.MISC.HIST' ; GOTO ERR.SUB
OPEN 'LS.MISC.INVD'                   TO LS.MISC.INVD      ELSE ERR='OPEN LS.MISC.INVD' ; GOTO ERR.SUB
OPEN 'LS.MISC.INVD,LS.ADDL.MISC.INVD' TO LS.ADDL.MISC.INVD ELSE ERR='OPEN LS.MISC.INVD,LS.ADDL.MISC.INVD' ; GOTO ERR.SUB
OPEN 'LS.OI.CTD.INVOICE'              TO LS.OI.CTD.INVOICE ELSE ERR='OPEN LS.OI.CTD.INVOICE' ; GOTO ERR.SUB
OPEN 'LS.CTD.PYMTHIST,LS.ADDL.CTD.PYMTHIST' TO LS.ADDL.CTD.PYMTHIST ELSE ERR='OPEN LS.CTD.PYMTHIST,LS.ADDL.CTD.PYMTHIST' ; GO
OPEN 'LS.CHNG.LOG' TO LS.CHNG.LOG ELSE ERR='OPEN LS.CHNG.LOG' ; GOTO ERR.SUB
OPEN 'LS.CHNG.LOG,LS.MTD.CHNG.LOG' TO LS.MTD.CHNG.LOG ELSE ERR='OPEN LS.MTD.CHNG.LOG' ; GOTO ERR.SUB

PRINT 'ENTER OPEN ITEM TO WAIVE: ':
INPUT OI.KEY

GOSUB INIT
IF ERR # '' THEN STOP ERR

* STEP 1 - GET A NEW PAYMENT NUMBER
CALL GET.NEXT.SEQ.ID('LS.CTD.PYMTHIST',MY.PYMT.KEY,0,'LS.CTD.PYMTHIST')
IF MY.PYMT.KEY = '' OR MY.PYMT.KEY = 0 THEN ERR='CANNOT GET NEXT PAYMENT KEY' ; GOTO ERR.SUB

* STEP 2 - CREATE A NEW PAYMENT RECORD
MAT PAYMENT.HISTORY=''
H.CONTRACT.KEY=OIC.CONTRACT.NUMBER
H.DATE.RECEIVED=MY.PYMT.DATE
H.PAYMENT.TYPE=11 ;* We are always an overide
H.PAYMENT.AMOUNT=MY.PYMT.AMT ;* Pay it forwards
H.MISC.INVD=MY.PYMT.KEY:'.00001'
H.MISC.RECVD=MY.PYMT.AMT
H.CURRENT.DATE=MY.DUE.DATE
H.ASSET.MISC.AMT=MY.PYMT.AMT
H.POSTING.DATE=DATE()
H.PYMT.MEMO='Auto Adjustment'
H.ASSET.RECORDS=ASSET.RECORDS
H.OI.INVOICE.NUMBERS=OI.KEY
H.USER='MASTER'
H.ADJ.CODE='08'
MATWRITE PAYMENT.HISTORY ON LS.CTD.PYMTHIST, MY.PYMT.KEY
WRITE '' ON LS.ADDL.CTD.PYMTHIST, MY.PYMT.KEY

* STEP 3 - UPDATE CONTRACT POINTERS TO NEW PAYMENT RECORD
LOCATE MY.DUE.DATE IN HIST.DATES<1> BY 'AR' SETTING POS ELSE NULL
INS MY.DUE.DATE  BEFORE HIST.DATES<1,POS>
INS MY.PYMT.KEY  BEFORE HIST.KEYS<1,POS>
MATWRITE PAYMENT.KEYS ON LS.PYMTHIST, OIC.CONTRACT.NUMBER

* STEP 3.5 - CREATE LS.MISC.HIST RECORDS
MISC.CONTRACT.NO = OIC.CONTRACT.NUMBER
MISC.DATE=OCONV(MY.PYMT.DATE,'D4Y'):OCONV(MY.PYMT.DATE,'DM')
MISC.AMT=MY.PYMT.AMT
INC.IN.RENT=1 ;* TODO - where does this come from?
MISC.DESC=OCONV('CHRG.TYPE*':OIC.CHARGE.TYPE<1,1>,'TPARAMETER;X;1;1')
MISC.GL.CODE=OIC.CHARGE.TYPE<1,1>[2,4]
MISC.OI.NUMBER=OI.KEY
MATWRITE MISC ON LS.MISC.HIST, MY.PYMT.KEY:'.00001'
WRITE '' ON LS.ADDL.MISC.HIST, MY.PYMT.KEY:'.00001'

* STEP 4 - UPDATE ASSET OPEN ITEMS
FOR A=1 TO DCOUNT(ASSET.RECORDS,@VM)
    MY.ASSET.KEY=OI.KEY:'*':ASSET.RECORDS<1,A>
    MATREAD ASSET.OPEN.ITEM FROM AS.MASTER, MY.ASSET.KEY THEN
        AOI.CTD.PYMTHIST=MY.PYMT.KEY
        AOI.MISC.AMT.RCVD=MY.PYMT.AMT ;* TODO: Should this be prorated?
        MATWRITE ASSET.OPEN.ITEM ON AS.MASTER, MY.ASSET.KEY
    END
NEXT A

* STEP 5 - UPDATE LS.BILLING MISC AMOUNT DUE
IF OIC.AGING.BUCKET = "CUR" THEN
    MISC.DUE=MISC.DUE-MY.PYMT.AMT
END ELSE
    MISC.OVERDUE=MISC.OVERDUE-MY.PYMT.AMT
END
MATWRITE BILLING ON LS.BILLING, OIC.CONTRACT.NUMBER

* STEP 6 - UPDATE CONTRACT POINTERS TO OPEN ITEMS
LOCATE OI.KEY IN LS.OI.UNPAID.INV.RECS<1> SETTING POS THEN
    DEL LS.OI.UNPAID.INV.RECS<1,POS>
    DEL LS.OI.UNPAID.INV.DATES<1,POS>
    DEL LS.OI.UNPAID.INV.BUCKETS<1,POS>
    MATWRITE OI.POINTERS ON LS.OI.POINTERS, OIC.CONTRACT.NUMBER
END

* STEP 7 - DELETE THE LS.MISC.INVD RECORD, AND LS.POINTERS
FOR I=1 TO DCOUNT(OIC.MISC.INVD.KEYS<1>,@VM)
    MY.INVD.KEY=OIC.MISC.INVD.KEYS<1,I>
    DELETE LS.MISC.INVD, MY.INVD.KEY
    DELETE LS.ADDL.MISC.INVD, MY.INVD.KEY
    LOCATE MY.INVD.KEY IN MISC.INVD.RECORDS<1> SETTING POS THEN
        DEL MISC.INVD.RECORDS<1,POS>
        DEL MISC.INVD.DATES<1,POS>
    END
NEXT I

* STEP 8 - UPDATE LS.OI.CTD.INVOICE - MARK IT DONNY!
FOR P=1 TO DCOUNT(OIC.OUTSTANDING.BALANCE<1>,@VM)
    * Everything is paid!
    OIC.PAYMENT.AMOUNT<1,P>=OIC.OUTSTANDING.BALANCE<1,P>
    OIC.OUTSTANDING.BALANCE<1,P>=0
    OIC.RECEIVED.DATE<1,P>=MY.PYMT.DATE
NEXT P
OIC.PAYMENT.MEMO='Auto Adjustment'
OIC.CTD.PYMTHIST=MY.PYMT.KEY
OIC.USERID='MASTER'
MATWRITE OI.CTD.INVOICE ON LS.OI.CTD.INVOICE, OI.KEY

* STEP 9 - UPDATE CHANGE LOG
MAT CHGLOG = ""
CHG.DATE=DATE()
USER.ID="MASTER"
TB.CHNG.LOG.KEY=275
OLD.INFO=MY.PYMT.AMT
NEW.INFO=0
NET.CHNG=-MY.PYMT.AMT
CHG.TIME=TIME()

LAST.CHNG.PTR=DCOUNT(LS.CHNG.LOG.RECORDS<1>,@VM)
NEXT.CHNG.NUM=FMT(LS.CHNG.LOG.RECORDS<1,LAST.CHNG.PTR>+1,'R%4')
NEXT.CHNG.KEY=OIC.CONTRACT.NUMBER:'*':NEXT.CHNG.NUM
MATWRITE CHGLOG ON LS.CHNG.LOG, NEXT.CHNG.KEY
LS.CHNG.LOG.RECORDS<1,-1>=NEXT.CHNG.NUM
MATWRITE CONTRACT.POINTERS ON LS.POINTERS, OIC.CONTRACT.NUMBER

PRINT "DONE!"
STOP
*RETURN

INIT:
    * Read stuff in to start with to make sure nothing is missing, before we start waiving our freak flag
    MATREAD OI.CTD.INVOICE FROM LS.OI.CTD.INVOICE, OI.KEY ELSE
        ERR='CANNOT READ LS.OI.CTD.INVOICE ':OI.KEY
        GOTO ERR.SUB
    END

    * We can only waive misc items
    IF OIC.CHARGE.TYPE<1,1>[1,1] # 'M' THEN
        ERR='CAN ONLY WAIVE MISC ITEMS, NOT ':OIC.CHARGE.TYPE<1,1>
        GOTO ERR.SUB
    END

    * We cannot waive an item that's already been paid
    IF OIC.OUTSTANDING.BALANCE <= 0 THEN
        ERR='CANNOT WAIVE - MISC ITEM ALREADY PAID'
        GOTO ERR.SUB
    END

    * We cannot waive financed misc items - requires rebalancing the contract
    FINANCE.MISC=OCONV("23*":OIC.CHARGE.TYPE<1,1>[2,4],"TPARAMETER;X;3;3")
    IF FINANCE.MISC # "0" THEN
        ERR='CANNOT WAIVE A FINANCED MISC ITEM - ':OIC.CHARGE.TYPE<1,1>
        GOTO ERR.SUB
    END

    MY.PYMT.AMT=0
    FOR P=1 TO DCOUNT(OIC.OUTSTANDING.BALANCE<1>,@VM)
        MY.PYMT.AMT+=OIC.OUTSTANDING.BALANCE<1,P>
    NEXT P

    MY.PYMT.DATE=DATE() ;* Perhaps should be something else?
    MY.DUE.DATE=OIC.DUE.DATE<1,1>

    MATREAD MASTER FROM LS.MASTER, OIC.CONTRACT.NUMBER ELSE
        ERR='CANNOT READ LS.MASTER ':OIC.CONTRACT.NUMBER
        GOTO ERR.SUB
    END

    MATREAD BILLING FROM LS.BILLING, OIC.CONTRACT.NUMBER ELSE
        ERR='CANNOT READ LS.MASTER,LS.BILLING ':OIC.CONTRACT.NUMBER
        GOTO ERR.SUB
    END

    MATREAD OI.POINTERS FROM LS.OI.POINTERS, OIC.CONTRACT.NUMBER ELSE
        ERR='CANNOT READ LS.MASTER,LS.OI.POINTERS ':OIC.CONTRACT.NUMBER
        GOTO ERR.SUB
    END

    MATREAD CONTRACT.POINTERS FROM LS.POINTERS, OIC.CONTRACT.NUMBER ELSE
        ERR='CANNOT READ LS.MASTER,LS.POINTERS ':OIC.CONTRACT.NUMBER
        GOTO ERR.SUB
    END

    MATREAD PAYMENT.KEYS FROM LS.PYMTHIST, OIC.CONTRACT.NUMBER ELSE
        ERR='CANNOT READ LS.MASTER,LS.PYMTHIST ':OIC.CONTRACT.NUMBER
        GOTO ERR.SUB
    END

    MATREAD MISC FROM LS.MISC.INVD, OIC.MISC.INVD.KEYS<1,1> ELSE
        ERR='CANNOT READ LS.MISC.INVD ':OIC.MISC.INVD.KEYS<1,1>
        GOTO ERR.SUB
    END
RETURN

ERR.SUB:
    PRINT ERR
    STOP
    *RETURN
END
