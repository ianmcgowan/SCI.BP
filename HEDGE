***************************************************************************
* Program: TRIN.HEDGE
* Author : Ian McGowan
* Date   : 1999/05/21
* Edited : $Id: TRIN.HEDGE 17138 2013-10-01 17:05:34Z stiffd01 $
* Comment: Create aligned payment streams
***************************************************************************
INCLUDE BP.DEV SCREEN.VARS

OPEN 'TRIN.HEDGE.DATA' TO TRIN.HEDGE.DATA ELSE
    EXECUTE \CREATE.FILE TRIN.HEDGE.DATA 113,1\
    OPEN 'TRIN.HEDGE.DATA' TO TRIN.HEDGE.DATA ELSE STOP 201,'TRIN.HEDGE.DATA'
END
OPEN 'TRIN.INCOME.DATA' TO TRIN.INCOME.DATA ELSE
    EXECUTE \CREATE.FILE TRIN.INCOME.DATA 113,1\
    OPEN 'TRIN.INCOME.DATA' TO TRIN.INCOME.DATA ELSE STOP 201,'TRIN.INCOME.DATA'
END
OPEN 'DICT','LS.MASTER' TO @DICT ELSE STOP 201,'DICT LS.MASTER'
OPEN 'LS.MASTER,LS.PYMT.TABLE' TO LS.PYMT.TABLE ELSE STOP 201,'LS.PYMT.TABLE'
OPEN 'LS.MASTER,LS.INCOME.TABLE' TO LS.INCOME.TABLE ELSE STOP 201,'LS.INCOME.TABLE'
OPEN 'LS.MASTER' TO LS.MASTER ELSE STOP 201,'LS.MASTER'
OPEN 'LS.MASTER,LS.BILLING' TO LS.BILLING ELSE STOP 201,'LS.BILLING'
OPEN 'LS.MASTER,LS.FLOAT.AMORT' TO LS.FLOAT.AMORT ELSE
  PRINT "LS.FLOAT.AMORT IS NOT USED IN THIS PORTFOLIO "
  FLOAT.FLAG = 0
END

PROG='TRIN.HEDGE'
DESC='Create payment streams'
CALL SCREEN.HDR(PROG,DESC)

PRINT @(4,6):"Saved list (RTN=HEDGE): ":
INPUT LIST.NAME
IF LIST.NAME = '/' THEN STOP
IF LIST.NAME = '' THEN LIST.NAME="HEDGE"
E=\GET-LIST \:LIST.NAME

LOOP
    PRINT @(4,8):EOS:"Enter the payment start date: ":
    INPUT START.DATE
    IF START.DATE = '' OR START.DATE = '/' THEN STOP
    START.DATE = ICONV(START.DATE,"D")
UNTIL START.DATE # "" DO
    PRINT ERROR:"Invalid date - press ENTER ":
    INPUT AAA:
REPEAT

PRINT @(4,10):EOS:"Remove security deposit from end of stream? (Y/N): ":
INPUT REMOVE.SEC.DEP
IF REMOVE.SEC.DEP = "Y" THEN REMOVE.SEC.DEP=1 ELSE REMOVE.SEC.DEP=0

PRINT @(4,12):EOS:"Include renewals in stream? (Y/N): ":
INPUT INCLUDE.RENEW
IF INCLUDE.RENEW = "Y" THEN INCLUDE.RENEW=1 ELSE INCLUDE.RENEW=0

PRINT @(4,14):EOS:"Include residual income in stream? (Y/N): ":
INPUT INCLUDE.RESID
IF INCLUDE.RESID = "N" THEN INCLUDE.RESID=0 ELSE INCLUDE.RESID=1
PRINT @(4,16):"Please wait..."

START.YYYY = OCONV(START.DATE, "D4Y")
START.MM = OCONV(START.DATE, "DM")
START.DD = OCONV(START.DATE, "DD")
GOSUB CREATE.DICTS

EXECUTE E CAPTURING DUMMY

CLEARFILE TRIN.HEDGE.DATA
CONTRACT.CTR=0
LOOP
    READNEXT @ID ELSE EXIT
    GOSUB PYMT.STREAMS
    GOSUB INCOME.STREAMS
    WRITE NEW.PYMT.REC ON TRIN.HEDGE.DATA, @ID
REPEAT
PRINT 'Done'
STOP

PYMT.STREAMS:
    * FIGURE OUT THE PYMT STREAMS
    READ @RECORD FROM LS.MASTER, @ID ELSE STOP 'ERROR READING LS.MASTER ':@ID
    READ PYMT.REC FROM LS.PYMT.TABLE, @ID ELSE
        STOP 'ERROR READING LS.PYMT.TABLE ':@ID
    END
    CONTRACT.CTR+=1
    *PRINT CONTRACT.CTR 'R#5':' ':@ID

    SEC.DEP=CALCULATE("SEC.DEPOSIT")
    RENEWAL.DATE=CALCULATE("UATB.R.COMMENCE.DATE")

    NEW.PYMT.REC=''
    CTR=1
    RENEW.YYYY=OCONV(RENEWAL.DATE,"D4Y")
    RENEW.MM=OCONV(RENEWAL.DATE,"DM")
    I=DCOUNT(PYMT.REC<1>,@VM)
    REACHED.START=0

    FOR F=1 TO I
        PYMT=PYMT.REC<2,F>
        D=PYMT.REC<1,F>
        MM=OCONV(D,"DM")
        YYYY=OCONV(D,"D4Y")
        DD=OCONV(D,"DD")

        IF NOT(INCLUDE.RENEW) THEN
            IF YYYY=RENEW.YYYY AND MM=RENEW.MM THEN
                * This is a renewal deal and we reached the commencement
                * date of the renewal term, exit the loop
                EXIT
            END
        END

        IF YYYY=START.YYYY AND MM=START.MM THEN
            * If the year and month match, we've reached the START
            REACHED.START=1
        END
        IF REACHED.START THEN
            NEW.PYMT.REC<1,CTR>=PYMT
            CTR+=1
        END
    NEXT F
    * Back off the sec dep from the end of the stream
    IF REMOVE.SEC.DEP THEN
        GOSUB DO.REMOVE.SEC.DEP
    END
RETURN

DO.REMOVE.SEC.DEP:
    I=DCOUNT(NEW.PYMT.REC<1>,@VM)
    FOR F=I TO 1 STEP -1
        RENT=NEW.PYMT.REC<1,F>
        IF SEC.DEP <= RENT THEN
            NEW.PYMT.REC<1,F>=RENT-SEC.DEP
            F=1
        END ELSE
            NEW.PYMT.REC<1,F>=0
            SEC.DEP=SEC.DEP-RENT
        END
    NEXT F
RETURN

INCOME.STREAMS:
    READV FLOAT.RATE FROM LS.BILLING,@ID,43 ELSE FLOAT.RATE=""
    READV INCOME.START.DATE FROM LS.MASTER,@ID,145 ELSE INCOME.START.DATE= ""
    INC.YYYY=OCONV(INCOME.START.DATE,"DY")
    INC.MO=OCONV(INCOME.START.DATE,"DM")
    INC.MO=INC.MO "R%2"
    PERIOD=INC.YYYY:INC.MO
    INCOME.TABLE=""
    IF FLOAT.RATE=0 THEN
        READ INCOME.REC FROM LS.INCOME.TABLE, @ID ELSE STOP 'CANNOT READ LS.INCOME.TABLE ':@ID
        INCOME.TABLE=INCOME.REC<5>
        RES.INCOME=INCOME.REC<6>
        MAXV=DCOUNT(INCOME.TABLE<1>,@VM)
        FOR K=1 TO MAXV
           IF INCLUDE.RESID THEN
              INCOME.TABLE<1,K>=INCOME.TABLE<1,K>+RES.INCOME<1,K>
           END
        NEXT K
    END ELSE
        PRINT "Floating rate code has not been tested... [ENTER]"; INPUT AAA
        FLOAT.FLAG = 1 ; STOP
        READ FLOAT.REC FROM LS.FLOAT.AMORT,@ID ELSE FLOAT.REC=""
        INCOME.TABLE=FLOAT.REC<2>
    END

    I=DCOUNT(INCOME.TABLE,@VM)
    FOR F=1 TO I
        INCOME=INCOME.TABLE<1,F>
        LOCATE PERIOD IN MONTHS<1> SETTING POS ELSE POS = 0
        IF POS > 0 THEN NEW.PYMT.REC<2,POS>=INCOME
        GOSUB INCREMENT.PERIOD
    NEXT F
RETURN

INCREMENT.PERIOD:
    INC.MO+=1
    IF INC.MO>12 THEN
        INC.MO=1
        INC.YYYY+=1
    END
    INC.MO=INC.MO "R%2"
    PERIOD=INC.YYYY:INC.MO
RETURN

CREATE.DICTS:
    R='D'
    R<1>='I'
    R<3>='MR2,'
    R<5>='12R'
    R<6>='S'
    D=START.DATE ; M=1
    DAY=1
    MONTHS=''

    FOR F=1 TO 150
        MM=OCONV(D, "DM") ; YYYY=OCONV(D, "D4Y")
        R<2>=\OCONV(@ID,"TTRIN.HEDGE.DATA;X\:F:\;1;1")\
        R<4>=MM:" ":YYYY:" Payment"
        MONTHS<1,-1>=YYYY:MM
        WRITE R ON @DICT, 'U.P.':F
        R<2>=\OCONV(@ID,"TTRIN.HEDGE.DATA;X\:F:\;2;2")\
        R<4>=MM:" ":YYYY:" Income"
        WRITE R ON @DICT, 'U.INC.':F
        *PRINT "U.P.":F:" ":
        GOSUB MOVE.MONTH
    NEXT F
RETURN

MOVE.MONTH:
    * Move D, M month's forward or backward
    MM=OCONV(D,"DM")
    YYYY=OCONV(D,"D4Y")
    DD=OCONV(D,"DD")

    MM=MM+M
    IF MM < 1 THEN
        * We move from JAN -> DEC
        MM=12
        YYYY-=1
    END
    IF MM > 12 THEN
        * Move from DEC -> JAN
        MM=1
        YYYY+=1
    END
    * Some months have less than 31 days...
    LOOP
        D=ICONV(MM:"/":DD:"/":YYYY,"D4/")
    UNTIL D # '' OR DD=0 DO
        DD=DD-1
    REPEAT
    IF DD = '' THEN STOP @ID:' ERROR MOVING MONTH'
RETURN
