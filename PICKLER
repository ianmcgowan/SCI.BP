***************************************************************************
* Program: PICKLER
* Author : Ian McGowan
* Date   : 3/20/2014
* Checkin: $Id: $
* Comment: Create a self-unpacking archive for dict/data items
***************************************************************************
* 2016-09-24:Ian:Make it harder to lose missing items
* 2016-11-09:Ian:Do not remove EXECUTE lines
* 2016-11-28:Ian:Improve output file formatting
* 2016-12-07:Ian:Sort list of files/items before writing
PROMPT ''
BLOB='PRINT "PICKLED by ':@LOGNAME:' on ':TIMEDATE():' in ':@ACCOUNT:'"'
BLOB<-1>='SENTENCE=@SENTENCE' ;* Need this early because EXECUTE resets..
BLOB<-1>='R=""'
S=@SENTENCE

IF DCOUNT(S,' ')>1 THEN
  OUTPUT.FILE=FIELD(S,' ',2)
END ELSE
  PRINT 'OUTPUT FILE:':
  INPUT OUTPUT.FILE
  IF OUTPUT.FILE='' OR OUTPUT.FILE='/' THEN STOP
END

OPEN OUTPUT.FILE TO OUT.FVAR ELSE
  STOP 201,OUTPUT.FILE
END

OLD.PROG=''
IF DCOUNT(S,' ')>2 THEN
  OUTPUT.ITEM=FIELD(S,' ',3)
END ELSE
  PRINT 'OUTPUT ITEM:':
  INPUT OUTPUT.ITEM
  IF OUTPUT.ITEM='' OR OUTPUT.ITEM='/' THEN STOP
END

PICKLE.LIST=''
READ OLD.PROG FROM OUT.FVAR, OUTPUT.ITEM THEN
  * Get the list of records from the existing OLD.PROG
  SWAP "#AM#" WITH @VM IN OLD.PROG ;* Yes, it's not a typo
  FOR F=1 TO DCOUNT(OLD.PROG,@AM)
    IF FIELD(OLD.PROG<F>,' ',1)='EXECUTE' OR FIELD(OLD.PROG<F>,' ',1)='STREAM' THEN
      * Keep execute statements, useful for CREATE.FILE etc.
      BLOB<-1>=OLD.PROG<F>
    END
    *
    IF OLD.PROG<F>=\S=''\ THEN
      * The next line is the first row of a new record, and the first
      * two values are file name and item name
      T=OLD.PROG<F+1>[5,99]
      FILE=T<1,1>
      ITEM=T<1,2>
      PRINT FILE 'L#30':' ':ITEM
      GOSUB CHECK.ITEM
      IF OK THEN
        ID=FILE:'|':ITEM
        LOCATE ID IN PICKLE.LIST<1> BY 'AL' SETTING POS ELSE NULL
        INS ID BEFORE PICKLE.LIST<1,POS>
      END
    END
  NEXT F
  PRINT 'Add any new items as needed, or hit ENTER to re-pickle'
END

LOOP
  PRINT '(DICT) FILE ITEM:':
  INPUT L
  IF L='/' THEN STOP 'Quitting'
  IF L='' THEN EXIT
  IF FIELD(L,' ',1)='DICT' THEN
    FILE='DICT ':FIELD(L,' ',2)
    ITEM=FIELD(L,' ',3)
  END ELSE
    FILE=FIELD(L,' ',1)
    ITEM=FIELD(L,' ',2)
  END
  GOSUB CHECK.ITEM
  IF OK THEN
    ID=FILE:'|':ITEM
    LOCATE ID IN PICKLE.LIST<1> BY 'AL' SETTING POS ELSE NULL
    INS ID BEFORE PICKLE.LIST<1,POS>
  END
REPEAT

* Now we have the sorted list, actually read the items and add to the blob
FOR I=1 TO DCOUNT(PICKLE.LIST<1>,@VM)
  FILE=FIELD(PICKLE.LIST<1,I>,'|',1)
  ITEM=FIELD(PICKLE.LIST<1,I>,'|',2)
  GOSUB ADD.ITEM
NEXT I

* Write out basic code that when run will recreate the record
BLOB<-1>='OVERWRITE=0'
BLOB<-1>='IF FIELD(SENTENCE," ",2)="OVERWRITE" THEN OVERWRITE=1'
BLOB<-1>='FOR F=1 TO DCOUNT(R,@AM)'
BLOB<-1>='  REC=R<F>'
BLOB<-1>='  SWAP "#AM#" WITH @AM IN REC'
BLOB<-1>='  SWAP "#VM#" WITH @VM IN REC'
BLOB<-1>='  SWAP "#SVM#" WITH @SVM IN REC'
BLOB<-1>='  SWAP "#134#" WITH "\" IN REC'
BLOB<-1>='  FILE=REC<1> ; DEL REC<1>'
BLOB<-1>='  ITEM=REC<1> ; DEL REC<1>'
BLOB<-1>='  PRINT FILE:" ":ITEM'
BLOB<-1>='  OPEN FILE TO FVAR ELSE STOP 201, FILE'
BLOB<-1>='  WFLAG=1'
BLOB<-1>='  READ DUMMY FROM FVAR, ITEM THEN'
BLOB<-1>='    IF NOT(OVERWRITE) THEN WFLAG=0 ; PRINT ITEM:" EXISTS, SKIPPED"'
BLOB<-1>='  END'
BLOB<-1>='  IF WFLAG THEN WRITE REC ON FVAR,ITEM'
BLOB<-1>='  CLOSE FVAR'
BLOB<-1>='NEXT F'
WRITE BLOB ON OUT.FVAR, OUTPUT.ITEM
STOP "Written"

CHECK.ITEM:
  OK=0
  OPEN FILE TO FVAR ELSE
    PRINT 'Cannot open ':FILE
    RETURN
  END
  READ REC FROM FVAR, ITEM ELSE
    PRINT 'Cannot read ':FILE:' ':ITEM
    RETURN
  END
  OK=1
RETURN

ADD.ITEM:
  GOSUB CHECK.ITEM
  IF NOT(OK) THEN STOP ;* Shouldn't happen at this point
  IF FILE[1,5]='DICT ' THEN DEL REC<9> ; DEL REC<8> ;* Avoid CD probs
  INS ITEM BEFORE REC<1>
  INS FILE BEFORE REC<1>
  SWAP @AM WITH '#AM#' IN REC
  SWAP @VM WITH '#VM#' IN REC
  SWAP @SVM WITH '#SVM#' IN REC
  IF INDEX(REC,'\',1) THEN
    SWAP '\' WITH '#134#' IN REC
  END
  BLOB<-1>=\S=''\
  LOOP
    T=REC[1,70]
    BLOB<-1>='S:=\':T:'\'
    REC=REC[71,LEN(REC)]
  UNTIL LEN(REC)=0 DO
  REPEAT
  BLOB<-1>='R<-1>=S'
  BLOB<-1>='*'
  CLOSE FVAR
RETURN
