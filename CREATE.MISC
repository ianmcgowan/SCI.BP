SUBROUTINE SCI.MISC.CREATE(CONTRACT.KEY, MISC.AMT.DUE, MISC.DUE.DATE, ASSET.KEY, GL.CODE, DESC.MISC, PAYABLE.YN, TAXABLE.YN, INC.IN.RENT.YN, PASS.THRU.YN, BILL.DISP.YN, EXEMPT.YN, M.KEY)
*
* Written By:  Kenny C.
* Program creates miscellaneous invoiced item from imported spreadsheets.
*
* Revise from TCI.CREATE.MISC
*
$INCLUDE IL.BPI MISC.DIM
$INCLUDE IL.BPI ADDL.MISC.DIM
$INCLUDE IL.BPI MISC.PARAM.DEFAULTS.DIM
$INCLUDE IL.BPI LOCATION.DIM
$INCLUDE IL.BPI OI.CTD.INVOICE.DIM
$INCLUDE IL.BPI BILLING.DIM
$INCLUDE IL.BPI CONTRACT.POINTERS.DIM
$INCLUDE IL.BPI OI.POINTERS.DIM
$INCLUDE IL.BPI MASTER.DIM
$INCLUDE IL.BPI ALPA.DIM
$INCLUDE IL.BPI FLOAT.DIM
$INCLUDE IL.BPI LEVERAGE.DIM
$INCLUDE IL.BPI LT.CHARGES.DIM
$INCLUDE IL.BPI OI.INVOICE.DIM
$INCLUDE IL.BPI PAYMENT.KEYS.DIM
$INCLUDE IL.BPI ASSET.DIM
$INCLUDE IL.BPI MONTH.COUNTS.DIM
$INCLUDE IL.BPI STATE.TAX.ITEM.AMC
$INCLUDE IL.BPI GL.ACCT.TABLE.AMC
$INCLUDE IL.BPI OI.CTD.INVOICE.AMC
$INCLUDE IL.BPI LOCATION.TAX.AMC
$INCLUDE IL.BPI INVENTORY.AMC
$INCLUDE IL.BPI LESSOR.AMC
$INCLUDE IL.BPI NOTE.PAYABLES.AMC
$INCLUDE IL.BPI MISC.AMC
$INCLUDE IL.BP,INCLUDE STANDARD.VARS
*
OPEN 'LS.MISC.INVD' TO LS.MISC.INVD ELSE STOP 201, 'LS.MISC.INVD'
OPEN 'LS.MISC.INVD,LS.ADDL.MISC.INVD' TO LS.ADDL.MISC.INVD ELSE STOP 201, 'LS.ADDL.MISC.INVD'
OPEN 'AS.LOCATION' TO AS.LOCATION ELSE STOP 201, 'AS.LOCATION'
OPEN 'LS.OI.CTD.INVOICE' TO LS.OI.CTD.INVOICE ELSE STOP 201, 'LS.OI.CTD.INVOICE'
OPEN 'LS.MASTER,LS.BILLING' TO LS.BILLING ELSE STOP 201, 'LS.BILLING'
OPEN 'LS.MASTER,LS.POINTERS' TO LS.POINTERS ELSE STOP 201, 'LS.POINTERS'
OPEN 'LS.MASTER' TO LS.MASTER ELSE STOP 201, 'LS.MASTER'
OPEN 'LS.MASTER,LS.OI.INVOICE' TO LS.OI.INVOICE ELSE STOP 201, 'LS.OI.INVOICE'
OPEN 'LS.MASTER,LS.OI.POINTERS' TO LS.OI.POINTERS ELSE STOP 201, 'LS.OI.POINTERS'
OPEN 'LS.MASTER,LS.LATE.CHARGES' TO LS.LATE.CHARGES ELSE STOP 201, 'LS.LATE.CHARGES'
OPEN 'PARAMETER' TO PARAMETER ELSE STOP 201, 'PARAMETER'
OPEN 'LS.MASTER,LS.PYMTHIST' TO LS.PYMTHIST ELSE STOP 201, 'LS.PYMTHIST'
IF CUSTOMER.RECORD[13,1] THEN
  OPEN 'LS.MASTER,LS.FLOAT' TO LS.FLOAT ELSE STOP 201, 'LS.FLOAT'
END
OPEN 'AS.MASTER' TO AS.MASTER ELSE STOP 201, 'AS.MASTER'
IF CUSTOMER.RECORD[22,1] THEN
  OPEN 'VERTEX.TAX' TO VERTEX.TAX ELSE STOP 201, 'VERTEX.TAX'
END ELSE
  OPEN 'TB.LOCATION' TO TB.LOCATION ELSE STOP 201, 'TB.LOCATION'
END
*
**************
* MAIN PROGRAM
**************
GOSUB INIT
GOSUB READ.RECORDS
GOSUB CREATE.MISC.RECORD
GOSUB CREATE.TAX.ITEM
GOSUB CREATE.OPEN.ITEM
GOSUB WRITE.MISC.ITEM
GOSUB AGE.MISC.ITEM
LOOP UNTIL PARAM.LOCK DO
  GOSUB GET.PARAM.LOCK
REPEAT
GOSUB WRITE.MONTHLY.COUNTERS
GOSUB WRITE.BILLING
RETURN
*
********
INIT:  *
********
PARAM.LOCK = 0
PRECISION 9
PARAM.WRITE = 0
MAT MISC = ""
MAT ADDL.MISC = ""
TEMP.OI.KEY = ""
RETURN
*
***************
READ.RECORDS:  *
***************
IF ASSET.KEY # '' THEN
  MATREAD ASSET FROM AS.MASTER, ASSET.KEY ELSE
    PRINT @(0,22):"Unable to read AS.MASTER for ":ASSET.KEY:BELL
    STOP
  END
  LOC.KEY = CONTRACT.KEY:"*":ASSET.KEY:"*":STATE.CODE:"*":CNTY.CODE:"*":CITY.CODE
  MATREAD LOCATION FROM AS.LOCATION, LOC.KEY ELSE
    PRINT @(0,22):"Unable to read AS.LOCATION for ":LOC.KEY:BELL
    STOP
  END
END
MATREAD BILLING FROM LS.BILLING,CONTRACT.KEY ELSE
  PRINT @(0,22):"Unable to read LS.BILLING for ":CONTRACT.KEY:BELL
  STOP
END
MATREAD CONTRACT.POINTERS FROM LS.POINTERS, CONTRACT.KEY ELSE
  PRINT @(0,22):"Unable to read LS.POINTERS for ":CONTRACT.KEY:BELL
  STOP
END
MATREAD OI.POINTERS FROM LS.OI.POINTERS, CONTRACT.KEY ELSE
  PRINT @(0,22):"Unable to read OI.POINTERS for ":CONTRACT.KEY:BELL
  STOP
END
MATREAD MASTER FROM LS.MASTER, CONTRACT.KEY ELSE
  PRINT @(0,22):"Unable to read LS.MASTER for ":CONTRACT.KEY:BELL
  STOP
END
MATREAD OI.INVOICE FROM LS.OI.INVOICE, CONTRACT.KEY ELSE
  PRINT @(0,22):"Unable to read LS.OI.INVOICE for ":CONTRACT.KEY:BELL
  STOP
END
MATREAD LT.CHARGES FROM LS.LATE.CHARGES, CONTRACT.KEY ELSE
  PRINT @(0,22):"Unable to read LS.LATE.CHARGES for ":CONTRACT.KEY:BELL
  STOP
END
MATREAD PAYMENT.KEYS FROM LS.PYMTHIST, CONTRACT.KEY ELSE
  PRINT @(0,22):"Unable to read LS.PYMTHIST for ":CONTRACT.KEY:BELL
  STOP
END
IF CUSTOMER.RECORD[13,1] THEN
  MATREAD FLOAT FROM LS.FLOAT, CONTRACT.KEY ELSE MAT FLOAT = ''
END ELSE
  MAT FLOAT = ""
END
LESSR = CONTRACT.KEY[1,3]
READV L.NATION FROM PARAMETER, LESSR:'*00', L.NATION.AMC ELSE L.NATION = ''
RETURN
*
*********************
CREATE.MISC.RECORD:  *
*********************
M.MONTH = MISC.DUE.DATE 'DM'
M.YEAR = MISC.DUE.DATE 'DY'
M.DAY = INV.DUE.DAY
MISC.CONTRACT.NO = CONTRACT.KEY
MISC.DATE = M.YEAR:M.MONTH 'R%2'
LOOP
  TEMP.DATE = M.MONTH:'/':M.DAY:'/':M.YEAR
  CALL INTERNAL.DATE.SUB(TEMP.DATE)
UNTIL TEMP.DATE DO
  M.DAY -= 1
REPEAT
*IF FROM.PROG = 'DISP.AS.00' OR FROM.PROG = 'SUP.REV9F.CREATE.DEF.MISC' THEN
*  MISC.EXCL.INV = 1
*END
MISC.GL.CODE = GL.CODE
MISC.DESC = DESC.MISC
CALL WP.REFORMAT(MISC.DESC,22,"",3,"",1,"","","")
MISC.ASSET = ASSET.KEY
MISC.PAYABLE = PAYABLE.YN
MISC.TAXABLE = TAXABLE.YN
INC.IN.RENT = INC.IN.RENT.YN
MISC.PASS.THRU = PASS.THRU.YN
MISC.BILL.DISP = BILL.DISP.YN
MISC.LS.FLAG = EXEMPT.YN
*
MISC.AMT = MISC.AMT.DUE
CALL GET.NEXT.SEQ.ID('LS.MISC.INVD',M.KEY,0,'LS.MISC.INVD')
LOCATE(MISC.DATE,MISC.INVD.DATES,1;VAR;'AR') ELSE NULL
MISC.INVD.DATES = INSERT(MISC.INVD.DATES,1,VAR;MISC.DATE)
MISC.INVD.RECORDS = INSERT(MISC.INVD.RECORDS,1,VAR;M.KEY)
RETURN
*
******************
CREATE.TAX.ITEM:  *
******************
PST.ON.GST = 0; * Change in the future if we have a customer in Canada
CALL CREATE.MISC.TAXES(MAT MISC, MAT BILLING, L.NATION,MAT LOCATION,PST.ON.GST,MAT ADDL.MISC)
RETURN
*
*******************
CREATE.OPEN.ITEM:  *
*******************
DATE.TO.INV = TEMP.DATE
IF (CUSTOMER.RECORD[8,1] OR CUSTOMER.RECORD[26,1]) AND INVOICE.CODE = 'D' AND NOTE.NUMBER # '' THEN
  OPEN 'NT.MASTER,NT.PAYABLES' TO NT.PAYABLES ELSE STOP 201, 'NT.PAYABLES'
  READV NT.FIRST.PYMT.DATE FROM NT.PAYABLES, NOTE.NUMBER<1,1>, 6 THEN
    IF NT.FIRST.PYMT.DATE <= DATE.TO.INV THEN NOTE.DATE.REACHED = 1 ELSE NOTE.DATE.REACHED = 0
  END ELSE NOTE.DATE.REACHED = 0
END ELSE NOTE.DATE.REACHED = 0
IF INVOICE.CODE = 'S' OR INVOICE.CODE = 'R' OR (INVOICE.CODE = 'D' AND NOTE.DATE.REACHED) OR (DISP.DATE # "" AND NOT(NUM.OF.ASSETS)) THEN
  CHK.DATE = DATE.TO.INV - INV.DAYS
  LOCATE(CHK.DATE,LS.OI.UNPAID.INV.DATES,1;NUM.TO.USE) THEN
    LOOP WHILE CHK.DATE = LS.OI.UNPAID.INV.DATES<1,NUM.TO.USE> DO
      MATREAD OI.CTD.INVOICE FROM LS.OI.CTD.INVOICE, LS.OI.UNPAID.INV.RECS<1,NUM.TO.USE> ELSE MAT OI.CTD.INVOICE = ''
      READV CHRG.TYPE FROM PARAMETER, 'CHRG.TYPE*':OIC.CHARGE.TYPE<1,1>, 2 ELSE CHRG.TYPE = OIC.CHARGE.TYPE<1,1>
      IF (OIC.INVOICE.NUMBER = '' AND (INVOICE.CODE = 'S' OR INVOICE.CODE = 'R' OR INVOICE.CODE = 'D')) OR (DISP.DATE # '' AND NOT(NUM.OF.ASSETS) AND OIC.INVOICE.NUMBER = "") THEN
        TEMP.OI.KEY<1,-1> = LS.OI.UNPAID.INV.RECS<1,NUM.TO.USE>
        OIC.INVOICE.NUMBER = 'M'
        MATWRITE OI.CTD.INVOICE ON LS.OI.CTD.INVOICE, LS.OI.UNPAID.INV.RECS<1,NUM.TO.USE>
      END
      IF (OIC.INVOICE.NUMBER # '' AND (INVOICE.CODE = 'S' OR INVOICE.CODE = 'R' OR INVOICE.CODE = 'D')) OR (DISP.DATE # "" AND NOT(NUM.OF.ASSETS)) THEN NUM.TO.USE += 1
    REPEAT
  END
END
MATWRITE MISC ON LS.MISC.INVD, M.KEY
IF MISC.AMT THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*M':MISC.GL.CODE, 2 ELSE CHRG.TYPE.KEY = 'M':MISC.GL.CODE
  OI.KEY = ''
  OI.AMT = MISC.AMT
  GOSUB CREATE.MISC.OPEN.ITEM
END
IF MISC.STATE.TAX THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*0011', 2 ELSE CHRG.TYPE.KEY = '0011'
  OI.AMT = MISC.STATE.TAX
  GOSUB CREATE.MISC.OPEN.ITEM
END
IF MISC.CNTY.TAX THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*0012', 2 ELSE CHRG.TYPE.KEY = '0012'
  OI.AMT = MISC.CNTY.TAX
  GOSUB CREATE.MISC.OPEN.ITEM
END
IF MISC.CITY.TAX THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*0013', 2 ELSE CHRG.TYPE.KEY = '0013'
  OI.AMT = MISC.CITY.TAX
  GOSUB CREATE.MISC.OPEN.ITEM
END
IF MISC.TCNTY.TAX.AMT THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*0014', 2 ELSE CHRG.TYPE.KEY = '0014'
  OI.AMT = MISC.TCNTY.TAX.AMT
  GOSUB CREATE.MISC.OPEN.ITEM
END
IF MISC.TCITY.TAX.AMT THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*0015', 2 ELSE CHRG.TYPE.KEY = '0015'
  OI.AMT = MISC.TCITY.TAX.AMT
  GOSUB CREATE.MISC.OPEN.ITEM
END
RETURN
*
************************
CREATE.MISC.OPEN.ITEM:  *
************************
NUM.CHRGS = DCOUNT(CHRG.TYPE.KEY,VM)
CHRG.KEY = CHRG.TYPE.KEY<1,NUM.CHRGS>
SEPARATE.OI.REC = 1
CREATE.ACCRUAL = 1
CALL CREATE.OPEN.ITEM.RECORD(MAT LT.CHARGES,MAT OI.INVOICE,MAT OI.POINTERS,MAT BILLING,'',CUST.CREDIT.ACCT,'','',DATE.TO.INV,OI.AMT,M.KEY,CHRG.KEY,CONTRACT.KEY,SEPARATE.OI.REC,OI.KEY,0,'','',MAT PAYMENT.KEYS,'','',CREATE.ACCRUAL)
LOCATE(OI.KEY,MISC.OI.NUMBER,1;MISC.NBR) ELSE
  MISC.OI.NUMBER<1,-1> = OI.KEY
END
RETURN
*
******************
WRITE.MISC.ITEM:  *
******************
WRITEV MISC.OI.NUMBER ON LS.MISC.INVD, M.KEY, MISC.OI.NUMBER.AMC
WRITEV MISC.MEMO ON LS.OI.CTD.INVOICE, MISC.OI.NUMBER, OIC.MISC.MEMO.AMC
MATWRITE ADDL.MISC ON LS.ADDL.MISC.INVD, M.KEY
MATWRITE CONTRACT.POINTERS ON LS.POINTERS, CONTRACT.KEY
MATWRITE OI.INVOICE ON LS.OI.INVOICE, CONTRACT.KEY
MATWRITE OI.POINTERS ON LS.OI.POINTERS, CONTRACT.KEY
IF TEMP.OI.KEY # '' THEN
  NUM.OI.KEYS = DCOUNT(TEMP.OI.KEY,VM)
  FOR JJ = 1 TO NUM.OI.KEYS
    MATREAD OI.CTD.INVOICE FROM LS.OI.CTD.INVOICE, TEMP.OI.KEY<1,JJ> THEN
      OIC.INVOICE.NUMBER = ''
      MATWRITE OI.CTD.INVOICE ON LS.OI.CTD.INVOICE, TEMP.OI.KEY<1,JJ>
    END
  NEXT JJ
END
RETURN
*
****************
AGE.MISC.ITEM:  *
****************
CALL RECALC.AGING.BUCKETS(MAT LT.CHARGES,MAT BILLING, MAT FLOAT,MAT ALPA,MAT LEVERAGE,MAT OI.POINTERS,ALPA.CODE,CMAINT.WORK.FILE,0)
RETURN
*****************
GET.PARAM.LOCK:  *
*****************
MSG.FLAG = 1
MATREADU MONTH.COUNTS FROM PARAMETER, 'MONTH.COUNTS' THEN
  PARAM.LOCK = 1
END LOCKED
  IF MSG.FLAG THEN
    PRINT @(0,22):"Parameter record locked...please wait."
    MSG.FLAG = 0
    MAT MONTH.COUNTS = ''
  END
  RQM
END
RETURN
*
*************************
WRITE.MONTHLY.COUNTERS:  *
*************************
LOCATE(MISC.GL.CODE,MISC.GL.CODES,1;VAR;'AR') THEN
  MONTH.MISC.INVD<1,VAR> += MISC.AMT
END ELSE
  MISC.GL.CODES = INSERT(MISC.GL.CODES,1,VAR;MISC.GL.CODE)
  MONTH.MISC.INVD = INSERT(MONTH.MISC.INVD,1,VAR;MISC.AMT)
END
MATWRITE MONTH.COUNTS ON PARAMETER, 'MONTH.COUNTS'
RETURN
*
****************
WRITE.BILLING: *
****************
MATWRITE BILLING ON LS.BILLING,CONTRACT.KEY
RETURN

PRECISION 9
*
$INCLUDE IL.BPI MISC.DIM
$INCLUDE IL.BPI ADDL.MISC.DIM
$INCLUDE IL.BPI MISC.PARAM.DEFAULTS.DIM
$INCLUDE IL.BPI LOCATION.DIM
$INCLUDE IL.BPI OI.CTD.INVOICE.DIM
$INCLUDE IL.BPI BILLING.DIM
$INCLUDE IL.BPI CONTRACT.POINTERS.DIM
$INCLUDE IL.BPI OI.POINTERS.DIM
$INCLUDE IL.BPI MASTER.DIM
$INCLUDE IL.BPI ALPA.DIM
$INCLUDE IL.BPI FLOAT.DIM
$INCLUDE IL.BPI LEVERAGE.DIM
$INCLUDE IL.BPI LT.CHARGES.DIM
$INCLUDE IL.BPI OI.INVOICE.DIM
$INCLUDE IL.BPI PAYMENT.KEYS.DIM
$INCLUDE IL.BPI ASSET.DIM
$INCLUDE IL.BPI MONTH.COUNTS.DIM
$INCLUDE IL.BPI STATE.TAX.ITEM.AMC
$INCLUDE IL.BPI GL.ACCT.TABLE.AMC
$INCLUDE IL.BPI OI.CTD.INVOICE.AMC
$INCLUDE IL.BPI LOCATION.TAX.AMC
$INCLUDE IL.BPI INVENTORY.AMC
$INCLUDE IL.BPI LESSOR.AMC
$INCLUDE IL.BPI NOTE.PAYABLES.AMC
$INCLUDE IL.BPI MISC.AMC
$INCLUDE IL.BP,INCLUDE STANDARD.VARS
*
OPEN 'LS.MISC.INVD' TO LS.MISC.INVD ELSE STOP 201, 'LS.MISC.INVD'
OPEN 'DICT LS.MISC.INVD' TO DICT.LS.MISC.INVD ELSE STOP 201, 'DICT LS.MISC.INVD'
OPEN 'LS.MISC.INVD,LS.ADDL.MISC.INVD' TO LS.ADDL.MISC.INVD ELSE STOP 201, 'LS.ADDL.MISC.INVD'
OPEN 'LS.MISC.INVD,LS.MISC.INVD.USER.DETAIL' TO MISC.USR.DETAIL ELSE STOP 201, 'LS.MISC.INVD.USER.DETAIL'
OPEN 'AS.LOCATION' TO AS.LOCATION ELSE STOP 201, 'AS.LOCATION'
OPEN 'LS.OI.CTD.INVOICE' TO LS.OI.CTD.INVOICE ELSE STOP 201, 'LS.OI.CTD.INVOICE'
OPEN 'LS.MASTER,LS.BILLING' TO LS.BILLING ELSE STOP 201, 'LS.BILLING'
OPEN 'LS.MASTER,LS.POINTERS' TO LS.POINTERS ELSE STOP 201, 'LS.POINTERS'
OPEN 'LS.MASTER' TO LS.MASTER ELSE STOP 201, 'LS.MASTER'
OPEN 'LS.MASTER,LS.OI.INVOICE' TO LS.OI.INVOICE ELSE STOP 201, 'LS.OI.INVOICE'
OPEN 'LS.MASTER,LS.OI.POINTERS' TO LS.OI.POINTERS ELSE STOP 201, 'LS.OI.POINTERS'
OPEN 'LS.MASTER,LS.LATE.CHARGES' TO LS.LATE.CHARGES ELSE STOP 201, 'LS.LATE.CHARGES'
OPEN 'PARAMETER' TO PARAMETER ELSE STOP 201, 'PARAMETER'
OPEN 'LS.MASTER,LS.PYMTHIST' TO LS.PYMTHIST ELSE STOP 201, 'LS.PYMTHIST'
IF CUSTOMER.RECORD[13,1] THEN
  OPEN 'LS.MASTER,LS.FLOAT' TO LS.FLOAT ELSE STOP 201, 'LS.FLOAT'
END
OPEN 'AS.MASTER' TO AS.MASTER ELSE STOP 201, 'AS.MASTER'
IF CUSTOMER.RECORD[22,1] THEN
  OPEN 'VERTEX.TAX' TO VERTEX.TAX ELSE STOP 201, 'VERTEX.TAX'
END ELSE
  OPEN 'TB.LOCATION' TO TB.LOCATION ELSE STOP 201, 'TB.LOCATION'
END
*
**************
* MAIN PROGRAM
**************
GOSUB INIT
GOSUB READ.RECORDS
IF SKIP.REC THEN RETURN
GOSUB CREATE.MISC.RECORD
GOSUB CREATE.TAX.ITEM
GOSUB CREATE.OPEN.ITEM
GOSUB WRITE.MISC.ITEM
GOSUB AGE.MISC.ITEM
LOOP UNTIL PARAM.LOCK DO
  GOSUB GET.PARAM.LOCK
REPEAT
GOSUB WRITE.MONTHLY.COUNTERS
GOSUB WRITE.BILLING
RETURN
*
********
INIT:  *
********
MSG = 'Contract: ':CONTRACT.KEY:'  '
PARAM.LOCK = 0
PARAM.WRITE = 0
MAT MISC = ""
MAT ADDL.MISC = ""
TEMP.OI.KEY = ""
RETURN
*
***************
READ.RECORDS:  *
***************
SKIP.REC = ''
MATREAD MASTER FROM LS.MASTER, CONTRACT.KEY ELSE MAT MASTER = ''
IF ASSET.KEY # '' THEN
   MATREAD ASSET FROM AS.MASTER, ASSET.KEY ELSE
      SKIP.REC = 1
      LOG.FILE<2,-1> = MSG:"Asset ID: ":ASSET.KEY:" not found."
      RETURN
   END
   LOC.KEY = CONTRACT.KEY:"*":ASSET.KEY:"*":STATE.CODE:"*":CNTY.CODE:"*":CITY.CODE
   MATREAD LOCATION FROM AS.LOCATION, LOC.KEY ELSE
      SKIP.REC = 1
      LOG.FILE<2,-1> = MSG:"Unable to read AS.LOCATION for ":LOC.KEY
      RETURN
   END
END
MATREAD CONTRACT.POINTERS FROM LS.POINTERS, CONTRACT.KEY ELSE
   SKIP.REC = 1
   LOG.FILE<2,-1> = MSG:"Unable to read LS.POINTERS"
   RETURN
END
MATREAD OI.POINTERS FROM LS.OI.POINTERS, CONTRACT.KEY ELSE
   SKIP.REC = 1
   LOG.FILE<2,-1> = MSG:"Unable to read OI.POINTERS"
   RETURN
END
MATREAD OI.INVOICE FROM LS.OI.INVOICE, CONTRACT.KEY ELSE
   SKIP.REC = 1
   LOG.FILE<2,-1> = MSG:"Unable to read LS.OI.INVOICE"
   RETURN
END
MATREAD LT.CHARGES FROM LS.LATE.CHARGES, CONTRACT.KEY ELSE
   SKIP.REC = 1
   LOG.FILE<2,-1> = MSG:"Unable to read LS.LATE.CHARGES"
   RETURN
END
MATREAD PAYMENT.KEYS FROM LS.PYMTHIST, CONTRACT.KEY ELSE
   SKIP.REC = 1
   LOG.FILE<2,-1> = MSG:"Unable to read LS.PYMTHIST"
   RETURN
END
MATREAD BILLING FROM LS.BILLING, CONTRACT.KEY ELSE
   SKIP.REC = 1
   LOG.FILE<2,-1> = MSG:'Has no billing information.'
   RETURN
END
IF CUSTOMER.RECORD[13,1] THEN
  MATREAD FLOAT FROM LS.FLOAT, CONTRACT.KEY ELSE MAT FLOAT = ''
END ELSE
  MAT FLOAT = ""
END
LESSR = CONTRACT.KEY[1,3]
READV L.NATION FROM PARAMETER, LESSR:'*00', L.NATION.AMC ELSE L.NATION = ''
RETURN
*
*********************
CREATE.MISC.RECORD:  *
*********************
M.MONTH = MISC.DUE.DATE 'DM'
M.YEAR = MISC.DUE.DATE 'DY'
M.DAY = INV.DUE.DAY
MISC.CONTRACT.NO = CONTRACT.KEY
MISC.DATE = M.YEAR:M.MONTH 'R%2'
LOOP
  TEMP.DATE = M.MONTH:'/':M.DAY:'/':M.YEAR
  CALL INTERNAL.DATE.SUB(TEMP.DATE)
UNTIL TEMP.DATE DO
  M.DAY -= 1
REPEAT
MISC.GL.CODE = GL.CODE
MISC.DESC = DESC.MISC
CALL WP.REFORMAT(MISC.DESC,22,"",3,"",1,"","","")
MISC.ASSET = ASSET.KEY
MISC.PAYABLE = PAYABLE.YN
MISC.TAXABLE = TAXABLE.YN
INC.IN.RENT = INC.IN.RENT.YN
MISC.PASS.THRU = PASS.THRU.YN
MISC.BILL.DISP = BILL.DISP.YN
*
MISC.AMT = AMT.DUE
CALL GET.NEXT.SEQ.ID('LS.MISC.INVD',M.KEY,0,'LS.MISC.INVD')
LOCATE(MISC.DATE,MISC.INVD.DATES,1;VAR;'AR') ELSE NULL
MISC.INVD.DATES = INSERT(MISC.INVD.DATES,1,VAR;MISC.DATE)
MISC.INVD.RECORDS = INSERT(MISC.INVD.RECORDS,1,VAR;M.KEY)
***
IF USR.DESC THEN
   READ USER.DETAIL.REC FROM MISC.USR.DETAIL,M.KEY ELSE USER.DETAIL.REC = ''
   CNT = ''
   LOOP UNTIL CNT GT 6
      CNT += 1
      DICT.MISC = 'UATB.DETAIL.DESC':CNT
      READV TEMP FROM DICT.LS.MISC.INVD,DICT.MISC,2 THEN
         IF INDEX(TEMP,"LS.MISC.INVD.USER.DETAIL",1) THEN
            FLD = FIELD(TEMP,";",3)
            IF NUM(FLD) THEN USER.DETAIL.REC<FLD> = USR.DESC<CNT>
         END
      END
   REPEAT
   WRITE USER.DETAIL.REC ON MISC.USR.DETAIL,M.KEY
END
RETURN
*
******************
CREATE.TAX.ITEM:  *
******************
PST.ON.GST = 0; * Change in the future if we have a customer in Canada
DIM MYSTERY (1)
MAT MYSTERY = ''
CALL CREATE.MISC.TAXES(MAT MISC, MAT BILLING, L.NATION,MAT LOCATION,PST.ON.GST, MAT MYSTERY)
RETURN
*
*******************
CREATE.OPEN.ITEM:  *
*******************
DATE.TO.INV = TEMP.DATE
IF (CUSTOMER.RECORD[8,1] OR CUSTOMER.RECORD[26,1]) AND INVOICE.CODE = 'D' AND NOTE.NUMBER # '' THEN
  OPEN 'NT.MASTER,NT.PAYABLES' TO NT.PAYABLES ELSE STOP 201, 'NT.PAYABLES'
  READV NT.FIRST.PYMT.DATE FROM NT.PAYABLES, NOTE.NUMBER<1,1>, 6 THEN
    IF NT.FIRST.PYMT.DATE <= DATE.TO.INV THEN NOTE.DATE.REACHED = 1 ELSE NOTE.DATE.REACHED = 0
  END ELSE NOTE.DATE.REACHED = 0
END ELSE NOTE.DATE.REACHED = 0
IF INVOICE.CODE = 'S' OR INVOICE.CODE = 'R' OR (INVOICE.CODE = 'D' AND NOTE.DATE.REACHED) OR (DISP.DATE # "" AND NOT(NUM.OF.ASSETS)) THEN
  CHK.DATE = DATE.TO.INV - INV.DAYS
  LOCATE(CHK.DATE,LS.OI.UNPAID.INV.DATES,1;NUM.TO.USE) THEN
    LOOP WHILE CHK.DATE = LS.OI.UNPAID.INV.DATES<1,NUM.TO.USE> DO
      MATREAD OI.CTD.INVOICE FROM LS.OI.CTD.INVOICE, LS.OI.UNPAID.INV.RECS<1,NUM.TO.USE> ELSE MAT OI.CTD.INVOICE = ''
      READV CHRG.TYPE FROM PARAMETER, 'CHRG.TYPE*':OIC.CHARGE.TYPE<1,1>, 2 ELSE CHRG.TYPE = OIC.CHARGE.TYPE<1,1>
      IF (OIC.INVOICE.NUMBER = '' AND (INVOICE.CODE = 'S' OR INVOICE.CODE = 'R' OR INVOICE.CODE = 'D')) OR (DISP.DATE # '' AND NOT(NUM.OF.ASSETS) AND OIC.INVOICE.NUMBER = "") THEN
        TEMP.OI.KEY<1,-1> = LS.OI.UNPAID.INV.RECS<1,NUM.TO.USE>
        OIC.INVOICE.NUMBER = 'M'
        MATWRITE OI.CTD.INVOICE ON LS.OI.CTD.INVOICE, LS.OI.UNPAID.INV.RECS<1,NUM.TO.USE>
      END
      IF (OIC.INVOICE.NUMBER # '' AND (INVOICE.CODE = 'S' OR INVOICE.CODE = 'R' OR INVOICE.CODE = 'D')) OR (DISP.DATE # "" AND NOT(NUM.OF.ASSETS)) THEN NUM.TO.USE += 1
    REPEAT
  END
END
MATWRITE MISC ON LS.MISC.INVD, M.KEY
IF MISC.AMT THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*M':MISC.GL.CODE, 2 ELSE CHRG.TYPE.KEY = 'M':MISC.GL.CODE
  OI.KEY = ''
  OI.AMT = MISC.AMT
  GOSUB CREATE.MISC.OPEN.ITEM
END
IF MISC.STATE.TAX THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*0011', 2 ELSE CHRG.TYPE.KEY = '0011'
  OI.AMT = MISC.STATE.TAX
  GOSUB CREATE.MISC.OPEN.ITEM
END
IF MISC.CNTY.TAX THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*0012', 2 ELSE CHRG.TYPE.KEY = '0012'
  OI.AMT = MISC.CNTY.TAX
  GOSUB CREATE.MISC.OPEN.ITEM
END
IF MISC.CITY.TAX THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*0013', 2 ELSE CHRG.TYPE.KEY = '0013'
  OI.AMT = MISC.CITY.TAX
  GOSUB CREATE.MISC.OPEN.ITEM
END
IF MISC.TCNTY.TAX.AMT THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*0014', 2 ELSE CHRG.TYPE.KEY = '0014'
  OI.AMT = MISC.TCNTY.TAX.AMT
  GOSUB CREATE.MISC.OPEN.ITEM
END
IF MISC.TCITY.TAX.AMT THEN
  READV CHRG.TYPE.KEY FROM PARAMETER, 'CHRG.TYPE.INDEX*0015', 2 ELSE CHRG.TYPE.KEY = '0015'
  OI.AMT = MISC.TCITY.TAX.AMT
  GOSUB CREATE.MISC.OPEN.ITEM
END
RETURN
*
************************
CREATE.MISC.OPEN.ITEM:  *
************************
NUM.CHRGS = DCOUNT(CHRG.TYPE.KEY,VM)
CHRG.KEY = CHRG.TYPE.KEY<1,NUM.CHRGS>
SEPARATE.OI.REC = 1
CREATE.ACCRUAL = 1
CALL CREATE.OPEN.ITEM.RECORD(MAT LT.CHARGES,MAT OI.INVOICE,MAT OI.POINTERS,MAT BILLING,'',CUST.CREDIT.ACCT,'','',DATE.TO.INV,OI.AMT,M.KEY,CHRG.KEY,CONTRACT.KEY,SEPARATE.OI.REC,OI.KEY,0,'','',MAT PAYMENT.KEYS,'','',CREATE.ACCRUAL)
LOCATE(OI.KEY,MISC.OI.NUMBER,1;MISC.NBR) ELSE
  MISC.OI.NUMBER<1,-1> = OI.KEY
END
RETURN
*
******************
WRITE.MISC.ITEM:  *
******************
WRITEV MISC.OI.NUMBER ON LS.MISC.INVD, M.KEY, MISC.OI.NUMBER.AMC
WRITEV MISC.MEMO ON LS.OI.CTD.INVOICE, MISC.OI.NUMBER, OIC.MISC.MEMO.AMC
MATWRITE ADDL.MISC ON LS.ADDL.MISC.INVD, M.KEY
MATWRITE CONTRACT.POINTERS ON LS.POINTERS, CONTRACT.KEY
MATWRITE OI.INVOICE ON LS.OI.INVOICE, CONTRACT.KEY
MATWRITE OI.POINTERS ON LS.OI.POINTERS, CONTRACT.KEY
IF TEMP.OI.KEY # '' THEN
  NUM.OI.KEYS = DCOUNT(TEMP.OI.KEY,VM)
  FOR JJ = 1 TO NUM.OI.KEYS
    MATREAD OI.CTD.INVOICE FROM LS.OI.CTD.INVOICE, TEMP.OI.KEY<1,JJ> THEN
      OIC.INVOICE.NUMBER = ''
      MATWRITE OI.CTD.INVOICE ON LS.OI.CTD.INVOICE, TEMP.OI.KEY<1,JJ>
    END
  NEXT JJ
END
RETURN
*
****************
AGE.MISC.ITEM:  *
****************
CALL RECALC.AGING.BUCKETS(MAT LT.CHARGES,MAT BILLING, MAT FLOAT,MAT ALPA,MAT LEVERAGE,MAT OI.POINTERS,ALPA.CODE,CMAINT.WORK.FILE,0)
RETURN
*****************
GET.PARAM.LOCK:  *
*****************
MSG.FLAG = 1
MATREADU MONTH.COUNTS FROM PARAMETER, 'MONTH.COUNTS' THEN
  PARAM.LOCK = 1
END LOCKED
  IF MSG.FLAG THEN
    PRINT @(0,22):"Parameter record locked...please wait."
    MSG.FLAG = 0
    MAT MONTH.COUNTS = ''
  END
  RQM
END
RETURN
*
*************************
WRITE.MONTHLY.COUNTERS:  *
*************************
LOCATE(MISC.GL.CODE,MISC.GL.CODES,1;VAR;'AR') THEN
  MONTH.MISC.INVD<1,VAR> += MISC.AMT
END ELSE
  MISC.GL.CODES = INSERT(MISC.GL.CODES,1,VAR;MISC.GL.CODE)
  MONTH.MISC.INVD = INSERT(MONTH.MISC.INVD,1,VAR;MISC.AMT)
END
MATWRITE MONTH.COUNTS ON PARAMETER, 'MONTH.COUNTS'
RETURN
*
****************
WRITE.BILLING: *
****************
MATWRITE BILLING ON LS.BILLING,CONTRACT.KEY
RETURN
